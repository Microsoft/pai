# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

apiVersion: v1
kind: Namespace
metadata:
  name: docker-cache
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-cache
  namespace: docker-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry-cache
  template:
    metadata:
      labels:
        app: docker-registry-cache
    spec:
      containers:
      - name: docker-registry-cache
        image: registry:2
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: registry-htpasswd
            mountPath: /auth/
            readOnly: True
          - name: registry-config
            mountPath: /etc/docker/registry/
            readOnly: True
        ports:
          - name: http
            containerPort: '{{ cluster_cfg["docker-cache"]["container_port"] }}'
      volumes:
        - name: registry-htpasswd
          secret:
            secretName: registry-htpasswd
            defaultMode: 0400
        - name: registry-config
          configMap:
            name: registry-config
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-cache-service
  namespace: docker-cache
  labels:
    app: docker-registry-cache
spec:
  selector:
    app: docker-registry-cache
  ports:
  - port: '{{ cluster_cfg["docker-cache"]["service_port"] }}'
    name: http
    targetPort: '{{ cluster_cfg["docker-cache"]["container_port"] }}'
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docker-registry-cache-ingress
  namespace: docker-cache
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  rules:
  - host: '{{ cluster_cfg["docker_cache"]["host_name"] }}'
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: docker-registry-cache-service
            port:
              number: 5000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  namespace: docker-cache
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      delete:
        enabled: true
      azure:
        accountname: {{ cluster_cfg["docker-cache"]["azure_account_name"] }}
        accountkey: {{ cluster_cfg["docker-cache"]["azure_account_key"] }}
        container: {{ cluster_cfg["docker-cache"]["azure_container_name"] }}
        # realm:  core.windows.net
    http:
      addr: {{ cluster_cfg["docker-cache"]["registry_listener"] }}
      headers:
        X-Content-Type-Options: [nosniff]
    auth:
      htpasswd:
        realm: basic-realm
        path: /auth/htpasswd # /etc/registry
    proxy:
      remoteurl: {{ cluster_cfg["docker-cache"]["remote_url"] }}
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-htpasswd
  namespace: docker-cache
data:
  htpasswd: | # test test as default, to generate htpasswd please refer to README
    {{ cluster_cfg["docker-cache"]["registry-htpasswd"] }}