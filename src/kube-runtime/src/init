#!/bin/sh

# Copyright (c) Microsoft Corporation
# All rights reserved.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
# to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


# This init script will be executed inside init container,
# all scripts under init.d will be executed in priority order.
# Init scripts will do preparations before user container starts.
# Runtime script will be executed as the entrypoint of user container
# and will be pid 1 process in user container.

PAI_DIR=/usr/local/pai
RUNTIME_DIR=${PAI_DIR}/runtime.d
PAI_LOG_DIR=${PAI_DIR}/logs

LOG_FILE=${PAI_LOG_DIR}/${FC_POD_UID}_entry.log

mkdir -p $PAI_LOG_DIR
cp /pai-runtime/runtime $PAI_DIR
cp -r /pai-runtime/runtime.d $PAI_DIR

# do preparation for each script
for i in `find /pai-runtime/init.d/ -type f -regex ".*.sh"` ; do
  file_name=`basename $i`
  echo -e "##### [${i} start] ##### \n"
  $i >> ${PAI_LOG_DIR}/${FC_POD_UID}_prep.log 2>&1
  echo -e "##### [${i} end] ##### \n\n"
done

# do service discovery
cd $PAI_LOG_DIR

/pai-runtime/frameworkbarrier > $PAI_LOG_DIR/${FC_POD_UID}_barrier.log 2>&1
echo "barrier returns $?" >> $LOG_FILE
python /pai-runtime/runtime.d/parse.py framework.json > $PAI_DIR/runtime_env.sh 2> $PAI_LOG_DIR/${FC_POD_UID}_parse.log
echo "parser.py returns $?" >> $LOG_FILE

# prepare user.sh, which is where user command get started
echo -e "\n$USER_CMD" >> ${RUNTIME_DIR}/user.sh

# debug
echo -e "finished entry\nmain.sh has:" >> $LOG_FILE
cat $PAI_DIR/init/main.sh >> $LOG_FILE
echo -e "\nruntime_env.sh has:" >> $LOG_FILE
cat $PAI_DIR/runtime_env.sh >> $LOG_FILE
